0%
Run tests:

-------------------------------------------------------------------------------

Quest_1

Style test
Style test output:
b'/builds/pipelines/test/to/src/char_decode.c:3:13: warning: code should be clang-formatted [-Wclang-format-violations]\nvoid dek() {\n            |\n/builds/pipelines/test/to/src/char_decode.c:4:9: warning: code should be clang-formatted [-Wclang-format-violations]\n  int a;\n        |\n/builds/pipelines/test/to/src/char_decode.c:5:22: warning: code should be clang-formatted [-Wclang-format-violations]\n  int flag_error = 1;\n                     |\n/builds/pipelines/test/to/src/char_decode.c:6:28: warning: code should be clang-formatted [-Wclang-format-violations]\n  while (scanf("%X", &a)) {\n                           |\n/builds/pipelines/test/to/src/char_decode.c:7:68: warning: code should be clang-formatted [-Wclang-format-violations]\n    if (((a >= \'a\') && (a <= \'z\')) || ((a >= \'A\') && (a <= \'Z\'))) {\n                                                                   |\n/builds/pipelines/test/to/src/char_decode.c:8:22: warning: code should be clang-formatted [-Wclang-format-violations]\n      flag_error = 0;\n                     |\n/builds/pipelines/test/to/src/char_decode.c:9:24: warning: code should be clang-formatted [-Wclang-format-violations]\n      printf("%c ", a);\n                       |\n/builds/pipelines/test/to/src/char_decode.c:10:29: warning: code should be clang-formatted [-Wclang-format-violations]\n      if (getchar() != 32) {\n                            |\n/builds/pipelines/test/to/src/char_decode.c:11:23: warning: code should be clang-formatted [-Wclang-format-violations]\n        putchar(\'\\n\');\n                      |\n/builds/pipelines/test/to/src/char_decode.c:12:16: warning: code should be clang-formatted [-Wclang-format-violations]\n        return;\n               |\n/builds/pipelines/test/to/src/char_decode.c:13:8: warning: code should be clang-formatted [-Wclang-format-violations]\n      }\n       |\n/builds/pipelines/test/to/src/char_decode.c:14:11: warning: code should be clang-formatted [-Wclang-format-violations]\n    } else\n          |\n/builds/pipelines/test/to/src/char_decode.c:15:13: warning: code should be clang-formatted [-Wclang-format-violations]\n      break;\n            |\n/builds/pipelines/test/to/src/char_decode.c:16:4: warning: code should be clang-formatted [-Wclang-format-violations]\n  }\n   |\n/builds/pipelines/test/to/src/char_decode.c:17:18: warning: code should be clang-formatted [-Wclang-format-violations]\n  if (flag_error)\n                 |\n/builds/pipelines/test/to/src/char_decode.c:21:13: warning: code should be clang-formatted [-Wclang-format-violations]\nvoid kod() {\n            |\n/builds/pipelines/test/to/src/char_decode.c:22:10: warning: code should be clang-formatted [-Wclang-format-violations]\n  char a;\n         |\n/builds/pipelines/test/to/src/char_decode.c:23:22: warning: code should be clang-formatted [-Wclang-format-violations]\n  int flag_error = 1;\n                     |\n/builds/pipelines/test/to/src/char_decode.c:24:28: warning: code should be clang-formatted [-Wclang-format-violations]\n  while (scanf("%c", &a)) {\n                           |\n/builds/pipelines/test/to/src/char_decode.c:25:68: warning: code should be clang-formatted [-Wclang-format-violations]\n    if (((a >= \'a\') && (a <= \'z\')) || ((a >= \'A\') && (a <= \'Z\'))) {\n                                                                   |\n/builds/pipelines/test/to/src/char_decode.c:26:22: warning: code should be clang-formatted [-Wclang-format-violations]\n      flag_error = 0;\n                     |\n/builds/pipelines/test/to/src/char_decode.c:27:24: warning: code should be clang-formatted [-Wclang-format-violations]\n      printf("%X ", a);\n                       |\n/builds/pipelines/test/to/src/char_decode.c:28:29: warning: code should be clang-formatted [-Wclang-format-violations]\n      if (getchar() != 32) {\n                            |\n/builds/pipelines/test/to/src/char_decode.c:29:23: warning: code should be clang-formatted [-Wclang-format-violations]\n        putchar(\'\\n\');\n                      |\n/builds/pipelines/test/to/src/char_decode.c:30:16: warning: code should be clang-formatted [-Wclang-format-violations]\n        return;\n               |\n/builds/pipelines/test/to/src/char_decode.c:31:8: warning: code should be clang-formatted [-Wclang-format-violations]\n      }\n       |\n/builds/pipelines/test/to/src/char_decode.c:32:11: warning: code should be clang-formatted [-Wclang-format-violations]\n    } else\n          |\n/builds/pipelines/test/to/src/char_decode.c:33:13: warning: code should be clang-formatted [-Wclang-format-violations]\n      break;\n            |\n/builds/pipelines/test/to/src/char_decode.c:34:4: warning: code should be clang-formatted [-Wclang-format-violations]\n  }\n   |\n/builds/pipelines/test/to/src/char_decode.c:35:18: warning: code should be clang-formatted [-Wclang-format-violations]\n  if (flag_error)\n                 |\n/builds/pipelines/test/to/src/char_decode.c:39:34: warning: code should be clang-formatted [-Wclang-format-violations]\nint main(int argc, char **argv) {\n                                 |\n/builds/pipelines/test/to/src/char_decode.c:40:19: warning: code should be clang-formatted [-Wclang-format-violations]\n  if (argc != 2) {\n                  |\n/builds/pipelines/test/to/src/char_decode.c:41:21: warning: code should be clang-formatted [-Wclang-format-violations]\n    printf("n/a\\n");\n                    |\n/builds/pipelines/test/to/src/char_decode.c:42:15: warning: code should be clang-formatted [-Wclang-format-violations]\n    return -1;\n              |\n/builds/pipelines/test/to/src/char_decode.c:43:4: warning: code should be clang-formatted [-Wclang-format-violations]\n  }\n   |\n/builds/pipelines/test/to/src/char_decode.c:44:71: warning: code should be clang-formatted [-Wclang-format-violations]\n  if ((argv[1][1] != 0) || (argv[1][0] > \'1\') || (argv[1][0] < \'0\')) {\n                                                                      |\n/builds/pipelines/test/to/src/char_decode.c:45:21: warning: code should be clang-formatted [-Wclang-format-violations]\n    printf("n/a\\n");\n                    |\n/builds/pipelines/test/to/src/char_decode.c:46:15: warning: code should be clang-formatted [-Wclang-format-violations]\n    return -1;\n              |\n/builds/pipelines/test/to/src/char_decode.c:47:4: warning: code should be clang-formatted [-Wclang-format-violations]\n  }\n   |\n/builds/pipelines/test/to/src/char_decode.c:48:39: warning: code should be clang-formatted [-Wclang-format-violations]\n  (argv[1][0] == \'0\') ? kod() : dek();\n                                      |\n'
Style test: FAIL 0

Style test result: 0

-------------------------------------------------------------------------------

Build output:

Project build: OK 1

Build result: 1

-------------------------------------------------------------------------------

Test number: 0, name: Quest_1

Test output: Result for test with number 0: OK 1

Test result: 0

-------------------------------------------------------------------------------

Test number: 1, name: Quest_1

Test output: Result for test with number 1: OK 1

Test result: 0

-------------------------------------------------------------------------------

Test number: 2, name: Quest_1

Test output: Result for test with number 2: FAIL 0

Test result: 0

-------------------------------------------------------------------------------

Test number: 3, name: Quest_1

Test output: Result for test with number 3: FAIL 0

Test result: 0

-------------------------------------------------------------------------------

Test number: 4, name: Quest_1

Test output: Result for test with number 4: OK 1

Test result: 0

-------------------------------------------------------------------------------

Test number: 5, name: Quest_1

Test output: Result for test with number 5: OK 1

Test result: 0

-------------------------------------------------------------------------------

Test number: 6, name: Quest_1

Test output: Result for test with number 6: OK 1

Test result: 0

-------------------------------------------------------------------------------

Test number: 7, name: Quest_1

Test output: Result for test with number 7: OK 1

Test result: 0

-------------------------------------------------------------------------------

Test number: 8, name: Quest_1

Test output: Result for test with number 8: FAIL 0

Test result: 0

-------------------------------------------------------------------------------

Test number: 9, name: Quest_1

Test output: Result for test with number 9: FAIL 0

Test result: 0

-------------------------------------------------------------------------------

Test number: 10, name: Quest_1

Test output: Result for test with number 10: OK 1

Test result: 0

-------------------------------------------------------------------------------

Quest_2

Style test
Style test output:
b'/builds/pipelines/test/to/src/char_decode.c:3:13: warning: code should be clang-formatted [-Wclang-format-violations]\nvoid dek() {\n            |\n/builds/pipelines/test/to/src/char_decode.c:4:9: warning: code should be clang-formatted [-Wclang-format-violations]\n  int a;\n        |\n/builds/pipelines/test/to/src/char_decode.c:5:22: warning: code should be clang-formatted [-Wclang-format-violations]\n  int flag_error = 1;\n                     |\n/builds/pipelines/test/to/src/char_decode.c:6:28: warning: code should be clang-formatted [-Wclang-format-violations]\n  while (scanf("%X", &a)) {\n                           |\n/builds/pipelines/test/to/src/char_decode.c:7:68: warning: code should be clang-formatted [-Wclang-format-violations]\n    if (((a >= \'a\') && (a <= \'z\')) || ((a >= \'A\') && (a <= \'Z\'))) {\n                                                                   |\n/builds/pipelines/test/to/src/char_decode.c:8:22: warning: code should be clang-formatted [-Wclang-format-violations]\n      flag_error = 0;\n                     |\n/builds/pipelines/test/to/src/char_decode.c:9:24: warning: code should be clang-formatted [-Wclang-format-violations]\n      printf("%c ", a);\n                       |\n/builds/pipelines/test/to/src/char_decode.c:10:29: warning: code should be clang-formatted [-Wclang-format-violations]\n      if (getchar() != 32) {\n                            |\n/builds/pipelines/test/to/src/char_decode.c:11:23: warning: code should be clang-formatted [-Wclang-format-violations]\n        putchar(\'\\n\');\n                      |\n/builds/pipelines/test/to/src/char_decode.c:12:16: warning: code should be clang-formatted [-Wclang-format-violations]\n        return;\n               |\n/builds/pipelines/test/to/src/char_decode.c:13:8: warning: code should be clang-formatted [-Wclang-format-violations]\n      }\n       |\n/builds/pipelines/test/to/src/char_decode.c:14:11: warning: code should be clang-formatted [-Wclang-format-violations]\n    } else\n          |\n/builds/pipelines/test/to/src/char_decode.c:15:13: warning: code should be clang-formatted [-Wclang-format-violations]\n      break;\n            |\n/builds/pipelines/test/to/src/char_decode.c:16:4: warning: code should be clang-formatted [-Wclang-format-violations]\n  }\n   |\n/builds/pipelines/test/to/src/char_decode.c:17:18: warning: code should be clang-formatted [-Wclang-format-violations]\n  if (flag_error)\n                 |\n/builds/pipelines/test/to/src/char_decode.c:21:13: warning: code should be clang-formatted [-Wclang-format-violations]\nvoid kod() {\n            |\n/builds/pipelines/test/to/src/char_decode.c:22:10: warning: code should be clang-formatted [-Wclang-format-violations]\n  char a;\n         |\n/builds/pipelines/test/to/src/char_decode.c:23:22: warning: code should be clang-formatted [-Wclang-format-violations]\n  int flag_error = 1;\n                     |\n/builds/pipelines/test/to/src/char_decode.c:24:28: warning: code should be clang-formatted [-Wclang-format-violations]\n  while (scanf("%c", &a)) {\n                           |\n/builds/pipelines/test/to/src/char_decode.c:25:68: warning: code should be clang-formatted [-Wclang-format-violations]\n    if (((a >= \'a\') && (a <= \'z\')) || ((a >= \'A\') && (a <= \'Z\'))) {\n                                                                   |\n/builds/pipelines/test/to/src/char_decode.c:26:22: warning: code should be clang-formatted [-Wclang-format-violations]\n      flag_error = 0;\n                     |\n/builds/pipelines/test/to/src/char_decode.c:27:24: warning: code should be clang-formatted [-Wclang-format-violations]\n      printf("%X ", a);\n                       |\n/builds/pipelines/test/to/src/char_decode.c:28:29: warning: code should be clang-formatted [-Wclang-format-violations]\n      if (getchar() != 32) {\n                            |\n/builds/pipelines/test/to/src/char_decode.c:29:23: warning: code should be clang-formatted [-Wclang-format-violations]\n        putchar(\'\\n\');\n                      |\n/builds/pipelines/test/to/src/char_decode.c:30:16: warning: code should be clang-formatted [-Wclang-format-violations]\n        return;\n               |\n/builds/pipelines/test/to/src/char_decode.c:31:8: warning: code should be clang-formatted [-Wclang-format-violations]\n      }\n       |\n/builds/pipelines/test/to/src/char_decode.c:32:11: warning: code should be clang-formatted [-Wclang-format-violations]\n    } else\n          |\n/builds/pipelines/test/to/src/char_decode.c:33:13: warning: code should be clang-formatted [-Wclang-format-violations]\n      break;\n            |\n/builds/pipelines/test/to/src/char_decode.c:34:4: warning: code should be clang-formatted [-Wclang-format-violations]\n  }\n   |\n/builds/pipelines/test/to/src/char_decode.c:35:18: warning: code should be clang-formatted [-Wclang-format-violations]\n  if (flag_error)\n                 |\n/builds/pipelines/test/to/src/char_decode.c:39:34: warning: code should be clang-formatted [-Wclang-format-violations]\nint main(int argc, char **argv) {\n                                 |\n/builds/pipelines/test/to/src/char_decode.c:40:19: warning: code should be clang-formatted [-Wclang-format-violations]\n  if (argc != 2) {\n                  |\n/builds/pipelines/test/to/src/char_decode.c:41:21: warning: code should be clang-formatted [-Wclang-format-violations]\n    printf("n/a\\n");\n                    |\n/builds/pipelines/test/to/src/char_decode.c:42:15: warning: code should be clang-formatted [-Wclang-format-violations]\n    return -1;\n              |\n/builds/pipelines/test/to/src/char_decode.c:43:4: warning: code should be clang-formatted [-Wclang-format-violations]\n  }\n   |\n/builds/pipelines/test/to/src/char_decode.c:44:71: warning: code should be clang-formatted [-Wclang-format-violations]\n  if ((argv[1][1] != 0) || (argv[1][0] > \'1\') || (argv[1][0] < \'0\')) {\n                                                                      |\n/builds/pipelines/test/to/src/char_decode.c:45:21: warning: code should be clang-formatted [-Wclang-format-violations]\n    printf("n/a\\n");\n                    |\n/builds/pipelines/test/to/src/char_decode.c:46:15: warning: code should be clang-formatted [-Wclang-format-violations]\n    return -1;\n              |\n/builds/pipelines/test/to/src/char_decode.c:47:4: warning: code should be clang-formatted [-Wclang-format-violations]\n  }\n   |\n/builds/pipelines/test/to/src/char_decode.c:48:39: warning: code should be clang-formatted [-Wclang-format-violations]\n  (argv[1][0] == \'0\') ? kod() : dek();\n                                      |\n'
Style test: FAIL 0

Style test result: 0

-------------------------------------------------------------------------------

Build output:

Project build: OK 1

Build result: 1

-------------------------------------------------------------------------------

Test number: 11, name: Quest_2

Test output: Result for test with number 11: FAIL 0

Test result: 0

-------------------------------------------------------------------------------

Test number: 12, name: Quest_2

Test output: Result for test with number 12: FAIL 0

Test result: 0

-------------------------------------------------------------------------------

Test number: 13, name: Quest_2

Test output: Result for test with number 13: FAIL 0

Test result: 0

-------------------------------------------------------------------------------

Test number: 14, name: Quest_2

Test output: Result for test with number 14: FAIL 0

Test result: 0

-------------------------------------------------------------------------------

Test number: 15, name: Quest_2

Test output: Result for test with number 15: FAIL 0

Test result: 0

-------------------------------------------------------------------------------

Test number: 16, name: Quest_2

Test output: Result for test with number 16: OK 1

Test result: 0

-------------------------------------------------------------------------------

Quest_3

Style test
Style test output:
b'/builds/pipelines/test/to/src/char_decode.c:3:13: warning: code should be clang-formatted [-Wclang-format-violations]\nvoid dek() {\n            |\n/builds/pipelines/test/to/src/char_decode.c:4:9: warning: code should be clang-formatted [-Wclang-format-violations]\n  int a;\n        |\n/builds/pipelines/test/to/src/char_decode.c:5:22: warning: code should be clang-formatted [-Wclang-format-violations]\n  int flag_error = 1;\n                     |\n/builds/pipelines/test/to/src/char_decode.c:6:28: warning: code should be clang-formatted [-Wclang-format-violations]\n  while (scanf("%X", &a)) {\n                           |\n/builds/pipelines/test/to/src/char_decode.c:7:68: warning: code should be clang-formatted [-Wclang-format-violations]\n    if (((a >= \'a\') && (a <= \'z\')) || ((a >= \'A\') && (a <= \'Z\'))) {\n                                                                   |\n/builds/pipelines/test/to/src/char_decode.c:8:22: warning: code should be clang-formatted [-Wclang-format-violations]\n      flag_error = 0;\n                     |\n/builds/pipelines/test/to/src/char_decode.c:9:24: warning: code should be clang-formatted [-Wclang-format-violations]\n      printf("%c ", a);\n                       |\n/builds/pipelines/test/to/src/char_decode.c:10:29: warning: code should be clang-formatted [-Wclang-format-violations]\n      if (getchar() != 32) {\n                            |\n/builds/pipelines/test/to/src/char_decode.c:11:23: warning: code should be clang-formatted [-Wclang-format-violations]\n        putchar(\'\\n\');\n                      |\n/builds/pipelines/test/to/src/char_decode.c:12:16: warning: code should be clang-formatted [-Wclang-format-violations]\n        return;\n               |\n/builds/pipelines/test/to/src/char_decode.c:13:8: warning: code should be clang-formatted [-Wclang-format-violations]\n      }\n       |\n/builds/pipelines/test/to/src/char_decode.c:14:11: warning: code should be clang-formatted [-Wclang-format-violations]\n    } else\n          |\n/builds/pipelines/test/to/src/char_decode.c:15:13: warning: code should be clang-formatted [-Wclang-format-violations]\n      break;\n            |\n/builds/pipelines/test/to/src/char_decode.c:16:4: warning: code should be clang-formatted [-Wclang-format-violations]\n  }\n   |\n/builds/pipelines/test/to/src/char_decode.c:17:18: warning: code should be clang-formatted [-Wclang-format-violations]\n  if (flag_error)\n                 |\n/builds/pipelines/test/to/src/char_decode.c:21:13: warning: code should be clang-formatted [-Wclang-format-violations]\nvoid kod() {\n            |\n/builds/pipelines/test/to/src/char_decode.c:22:10: warning: code should be clang-formatted [-Wclang-format-violations]\n  char a;\n         |\n/builds/pipelines/test/to/src/char_decode.c:23:22: warning: code should be clang-formatted [-Wclang-format-violations]\n  int flag_error = 1;\n                     |\n/builds/pipelines/test/to/src/char_decode.c:24:28: warning: code should be clang-formatted [-Wclang-format-violations]\n  while (scanf("%c", &a)) {\n                           |\n/builds/pipelines/test/to/src/char_decode.c:25:68: warning: code should be clang-formatted [-Wclang-format-violations]\n    if (((a >= \'a\') && (a <= \'z\')) || ((a >= \'A\') && (a <= \'Z\'))) {\n                                                                   |\n/builds/pipelines/test/to/src/char_decode.c:26:22: warning: code should be clang-formatted [-Wclang-format-violations]\n      flag_error = 0;\n                     |\n/builds/pipelines/test/to/src/char_decode.c:27:24: warning: code should be clang-formatted [-Wclang-format-violations]\n      printf("%X ", a);\n                       |\n/builds/pipelines/test/to/src/char_decode.c:28:29: warning: code should be clang-formatted [-Wclang-format-violations]\n      if (getchar() != 32) {\n                            |\n/builds/pipelines/test/to/src/char_decode.c:29:23: warning: code should be clang-formatted [-Wclang-format-violations]\n        putchar(\'\\n\');\n                      |\n/builds/pipelines/test/to/src/char_decode.c:30:16: warning: code should be clang-formatted [-Wclang-format-violations]\n        return;\n               |\n/builds/pipelines/test/to/src/char_decode.c:31:8: warning: code should be clang-formatted [-Wclang-format-violations]\n      }\n       |\n/builds/pipelines/test/to/src/char_decode.c:32:11: warning: code should be clang-formatted [-Wclang-format-violations]\n    } else\n          |\n/builds/pipelines/test/to/src/char_decode.c:33:13: warning: code should be clang-formatted [-Wclang-format-violations]\n      break;\n            |\n/builds/pipelines/test/to/src/char_decode.c:34:4: warning: code should be clang-formatted [-Wclang-format-violations]\n  }\n   |\n/builds/pipelines/test/to/src/char_decode.c:35:18: warning: code should be clang-formatted [-Wclang-format-violations]\n  if (flag_error)\n                 |\n/builds/pipelines/test/to/src/char_decode.c:39:34: warning: code should be clang-formatted [-Wclang-format-violations]\nint main(int argc, char **argv) {\n                                 |\n/builds/pipelines/test/to/src/char_decode.c:40:19: warning: code should be clang-formatted [-Wclang-format-violations]\n  if (argc != 2) {\n                  |\n/builds/pipelines/test/to/src/char_decode.c:41:21: warning: code should be clang-formatted [-Wclang-format-violations]\n    printf("n/a\\n");\n                    |\n/builds/pipelines/test/to/src/char_decode.c:42:15: warning: code should be clang-formatted [-Wclang-format-violations]\n    return -1;\n              |\n/builds/pipelines/test/to/src/char_decode.c:43:4: warning: code should be clang-formatted [-Wclang-format-violations]\n  }\n   |\n/builds/pipelines/test/to/src/char_decode.c:44:71: warning: code should be clang-formatted [-Wclang-format-violations]\n  if ((argv[1][1] != 0) || (argv[1][0] > \'1\') || (argv[1][0] < \'0\')) {\n                                                                      |\n/builds/pipelines/test/to/src/char_decode.c:45:21: warning: code should be clang-formatted [-Wclang-format-violations]\n    printf("n/a\\n");\n                    |\n/builds/pipelines/test/to/src/char_decode.c:46:15: warning: code should be clang-formatted [-Wclang-format-violations]\n    return -1;\n              |\n/builds/pipelines/test/to/src/char_decode.c:47:4: warning: code should be clang-formatted [-Wclang-format-violations]\n  }\n   |\n/builds/pipelines/test/to/src/char_decode.c:48:39: warning: code should be clang-formatted [-Wclang-format-violations]\n  (argv[1][0] == \'0\') ? kod() : dek();\n                                      |\n'
Style test: FAIL 0

Style test result: 0

-------------------------------------------------------------------------------

Build output:

Project build: OK 1

Build result: 1

-------------------------------------------------------------------------------

Test number: 17, name: Quest_3

Test output: Result for test with number 17: OK 1

Test result: 0

-------------------------------------------------------------------------------

Test number: 18, name: Quest_3

Test output: Result for test with number 18: OK 1

Test result: 0

-------------------------------------------------------------------------------

Test number: 19, name: Quest_3

Test output: Result for test with number 19: OK 1

Test result: 0

-------------------------------------------------------------------------------

Test number: 20, name: Quest_3

Test output: Result for test with number 20: OK 1

Test result: 0

-------------------------------------------------------------------------------

Test number: 21, name: Quest_3

Test output: Result for test with number 21: OK 1

Test result: 0

-------------------------------------------------------------------------------

Test number: 22, name: Quest_3

Test output: Result for test with number 22: OK 1

Test result: 0

-------------------------------------------------------------------------------

Test number: 23, name: Quest_3

Test output: Result for test with number 23: OK 1

Test result: 0

-------------------------------------------------------------------------------

Test number: 24, name: Quest_3

Test output: Result for test with number 24: FAIL 0

Test result: 0

-------------------------------------------------------------------------------

Quest_4

Style test
Style test output:
b'/builds/pipelines/test/to/src/char_decode.c:3:13: warning: code should be clang-formatted [-Wclang-format-violations]\nvoid dek() {\n            |\n/builds/pipelines/test/to/src/char_decode.c:4:9: warning: code should be clang-formatted [-Wclang-format-violations]\n  int a;\n        |\n/builds/pipelines/test/to/src/char_decode.c:5:22: warning: code should be clang-formatted [-Wclang-format-violations]\n  int flag_error = 1;\n                     |\n/builds/pipelines/test/to/src/char_decode.c:6:28: warning: code should be clang-formatted [-Wclang-format-violations]\n  while (scanf("%X", &a)) {\n                           |\n/builds/pipelines/test/to/src/char_decode.c:7:68: warning: code should be clang-formatted [-Wclang-format-violations]\n    if (((a >= \'a\') && (a <= \'z\')) || ((a >= \'A\') && (a <= \'Z\'))) {\n                                                                   |\n/builds/pipelines/test/to/src/char_decode.c:8:22: warning: code should be clang-formatted [-Wclang-format-violations]\n      flag_error = 0;\n                     |\n/builds/pipelines/test/to/src/char_decode.c:9:24: warning: code should be clang-formatted [-Wclang-format-violations]\n      printf("%c ", a);\n                       |\n/builds/pipelines/test/to/src/char_decode.c:10:29: warning: code should be clang-formatted [-Wclang-format-violations]\n      if (getchar() != 32) {\n                            |\n/builds/pipelines/test/to/src/char_decode.c:11:23: warning: code should be clang-formatted [-Wclang-format-violations]\n        putchar(\'\\n\');\n                      |\n/builds/pipelines/test/to/src/char_decode.c:12:16: warning: code should be clang-formatted [-Wclang-format-violations]\n        return;\n               |\n/builds/pipelines/test/to/src/char_decode.c:13:8: warning: code should be clang-formatted [-Wclang-format-violations]\n      }\n       |\n/builds/pipelines/test/to/src/char_decode.c:14:11: warning: code should be clang-formatted [-Wclang-format-violations]\n    } else\n          |\n/builds/pipelines/test/to/src/char_decode.c:15:13: warning: code should be clang-formatted [-Wclang-format-violations]\n      break;\n            |\n/builds/pipelines/test/to/src/char_decode.c:16:4: warning: code should be clang-formatted [-Wclang-format-violations]\n  }\n   |\n/builds/pipelines/test/to/src/char_decode.c:17:18: warning: code should be clang-formatted [-Wclang-format-violations]\n  if (flag_error)\n                 |\n/builds/pipelines/test/to/src/char_decode.c:21:13: warning: code should be clang-formatted [-Wclang-format-violations]\nvoid kod() {\n            |\n/builds/pipelines/test/to/src/char_decode.c:22:10: warning: code should be clang-formatted [-Wclang-format-violations]\n  char a;\n         |\n/builds/pipelines/test/to/src/char_decode.c:23:22: warning: code should be clang-formatted [-Wclang-format-violations]\n  int flag_error = 1;\n                     |\n/builds/pipelines/test/to/src/char_decode.c:24:28: warning: code should be clang-formatted [-Wclang-format-violations]\n  while (scanf("%c", &a)) {\n                           |\n/builds/pipelines/test/to/src/char_decode.c:25:68: warning: code should be clang-formatted [-Wclang-format-violations]\n    if (((a >= \'a\') && (a <= \'z\')) || ((a >= \'A\') && (a <= \'Z\'))) {\n                                                                   |\n/builds/pipelines/test/to/src/char_decode.c:26:22: warning: code should be clang-formatted [-Wclang-format-violations]\n      flag_error = 0;\n                     |\n/builds/pipelines/test/to/src/char_decode.c:27:24: warning: code should be clang-formatted [-Wclang-format-violations]\n      printf("%X ", a);\n                       |\n/builds/pipelines/test/to/src/char_decode.c:28:29: warning: code should be clang-formatted [-Wclang-format-violations]\n      if (getchar() != 32) {\n                            |\n/builds/pipelines/test/to/src/char_decode.c:29:23: warning: code should be clang-formatted [-Wclang-format-violations]\n        putchar(\'\\n\');\n                      |\n/builds/pipelines/test/to/src/char_decode.c:30:16: warning: code should be clang-formatted [-Wclang-format-violations]\n        return;\n               |\n/builds/pipelines/test/to/src/char_decode.c:31:8: warning: code should be clang-formatted [-Wclang-format-violations]\n      }\n       |\n/builds/pipelines/test/to/src/char_decode.c:32:11: warning: code should be clang-formatted [-Wclang-format-violations]\n    } else\n          |\n/builds/pipelines/test/to/src/char_decode.c:33:13: warning: code should be clang-formatted [-Wclang-format-violations]\n      break;\n            |\n/builds/pipelines/test/to/src/char_decode.c:34:4: warning: code should be clang-formatted [-Wclang-format-violations]\n  }\n   |\n/builds/pipelines/test/to/src/char_decode.c:35:18: warning: code should be clang-formatted [-Wclang-format-violations]\n  if (flag_error)\n                 |\n/builds/pipelines/test/to/src/char_decode.c:39:34: warning: code should be clang-formatted [-Wclang-format-violations]\nint main(int argc, char **argv) {\n                                 |\n/builds/pipelines/test/to/src/char_decode.c:40:19: warning: code should be clang-formatted [-Wclang-format-violations]\n  if (argc != 2) {\n                  |\n/builds/pipelines/test/to/src/char_decode.c:41:21: warning: code should be clang-formatted [-Wclang-format-violations]\n    printf("n/a\\n");\n                    |\n/builds/pipelines/test/to/src/char_decode.c:42:15: warning: code should be clang-formatted [-Wclang-format-violations]\n    return -1;\n              |\n/builds/pipelines/test/to/src/char_decode.c:43:4: warning: code should be clang-formatted [-Wclang-format-violations]\n  }\n   |\n/builds/pipelines/test/to/src/char_decode.c:44:71: warning: code should be clang-formatted [-Wclang-format-violations]\n  if ((argv[1][1] != 0) || (argv[1][0] > \'1\') || (argv[1][0] < \'0\')) {\n                                                                      |\n/builds/pipelines/test/to/src/char_decode.c:45:21: warning: code should be clang-formatted [-Wclang-format-violations]\n    printf("n/a\\n");\n                    |\n/builds/pipelines/test/to/src/char_decode.c:46:15: warning: code should be clang-formatted [-Wclang-format-violations]\n    return -1;\n              |\n/builds/pipelines/test/to/src/char_decode.c:47:4: warning: code should be clang-formatted [-Wclang-format-violations]\n  }\n   |\n/builds/pipelines/test/to/src/char_decode.c:48:39: warning: code should be clang-formatted [-Wclang-format-violations]\n  (argv[1][0] == \'0\') ? kod() : dek();\n                                      |\n'
Style test: FAIL 0

Style test result: 0

-------------------------------------------------------------------------------

Build output:

Project build: OK 1

Build result: 1

-------------------------------------------------------------------------------

Test number: 25, name: Quest_4

Test output: Result for test with number 25: FAIL 0

Test result: 0

-------------------------------------------------------------------------------
